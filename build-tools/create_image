#!/usr/bin/perl -W


#####
# subroutines
#####
sub trim($);

#####
# command line switches
####
my $build_floppy = 0;
my $clean = 0;

my $floppy_image_name;

my $mtools_config_file = "mtools.config";

#parse the command line options
my $usage = 1;
while (@ARGV > 0) {
	my $arg = shift @ARGV;
	if ($arg eq "--create") {
		$build_floppy = 1;
		$usage = 0;
	} elsif ($arg eq "--clean") {
		$clean = 1;
		$usage = 0;
	} elsif ($arg eq "-about") {
		&about;
		exit 0;
	} elsif ($arg eq "-f") {
		$floppy_image_name = shift @ARGV;
		if (!(defined $floppy_image_name)) {
			print STDERR "-f must be followed by the name of the image file\n";
			$usage = 1;
		}
	} else {
		print STDERR "unknown option $arg\n";
		$usage = 1;
	}
}

if (!$clean && !$build_floppy) {
	$usage = 1;
}

if (!(defined $floppy_image_name) && (!$clean)) {
	$usage = 1;
}

if ($usage) {
	&about;
	print STDERR "Usage: create_image [options] -f <image name>\n";
	print STDERR "Options:\n";
	print STDERR "\t--create: Generates a fat12 floppy image\n";
	print STDERR "\t--clean: delete image mtool config files\n";
	exit $usage;
}

###
# validate command line arguments
if ($clean && $build_floppy) {
	print "--clean can not be used in conjunction with any other option\n";
	print "--clean can not be used in conjunction with any other option\n";
	exit -1;
}

#####
# process commands
if ($clean) {
	&clean_files;
}

if ($build_floppy) {
	&generate_mtools_config;
	&build_floppy_image;
	&install_syslinux;
  &copy_files;
}

sub about {
	print "create_image -- creates PoseidonOS image\n";
}

sub generate_mtools_config {
	print "Generating mtools config...\n";
	`rm -f $mtools_config_file`;

	open FH, ">>$mtools_config_file" or die print "failed to write mtools config: $!";

	print FH "#\n";
	print FH "# Automatically generated by poseidonos installer\n";
	print FH "#\n";
	print FH "drive a: file=\"$floppy_image_name\" 1.44m mformat_only";

	close FH;
}

sub build_floppy_image {
	print "Creating flopy image ($floppy_image_name)...\n";
	$out = system("dd if=/dev/zero of=$floppy_image_name bs=512 count=2880 &> /dev/null");

	if ($out != 0)
	{
		print STDERR "dd error: $!\n";
		exit -1;
	}

	print "Formatting disk image...\n";
	$out = system("MTOOLSRC=$mtools_config_file mformat a:");
	if ($out != 0)
	{
		exit -1;
	}
}

sub install_syslinux {
	print "Installing SYSLINUX...\n";

	$out = system("MTOOLSRC=$mtools_config_file mcopy syslinux.cfg a:/");
	if ($out != 0) {
		print STDERR "Unable to copy syslinux.cfg\n";
		exit -1;
	}

	$out = system("MTOOLSRC=$mtools_config_file mcopy /usr/share/syslinux/mboot.c32 a:/");
	if ($out != 0) {
		print STDERR "Unable to copy syslinux.cfg\n";
		exit -1;
	}

	$syslinux = $ENV{SYSLINUX};
	if (!defined $syslinux)
	{
		$syslinux = "syslinux";
	}

	#run install script
	$out = system("$syslinux -i $floppy_image_name");
	if ($out != 0)
	{
		print STDERR "ERROR: something went wrong with the grub install.  Make sure that you have grub on your system and that it is either in your \$PATH or in \$GRUB\n";
		exit -1;
	}
}

sub copy_files {
  open PACKAGE_LIST, "package_list.txt";
  my $file;
  while ($file = <PACKAGE_LIST>) {
    $file = trim($file);
    print("Copying $file to PoseidonOS image\n");
	  system("MTOOLSRC=$mtools_config_file mcopy $file a:/");
  }
  close (PACKAGE_LIST);
}

sub clean_files {
	print "removing mtools config";
	my $files = "$mtools_config_file ";
	if (defined $floppy_image_name)
	{
		$files .= $floppy_image_name;
		print " and floppy image\n";
	} else {
		print "\n";
	}
	`rm -f $files`;
}

sub trim($) {
  my $string = shift;
  $string =~ s/^\s+//;
  $string =~ s/\s+$//;
  return $string;
}
