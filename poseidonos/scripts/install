#!/usr/bin/perl -W
#
# This comes somewhat from minirighi-distrib.  I really liked his idea.
#

my $mtools_config_file=$ENV{MTOOL_CONFIG};
if (!defined $mtools_config_file) {
	$mtools_config_file = ".mtoolsrc";
}

#####
# command line switches
####
my $build_floppy = 0;
my $clean = 0;

my $floppy_image_name;

#parse the command line options
my $usage = 1;
while (@ARGV > 0) {
	my $arg = shift @ARGV;
	if ($arg eq "--build_floppy") {
		$build_floppy = 1;
		$usage = 0;
	} elsif ($arg eq "--clean") {
		$clean = 1;
		$usage = 0;
	} elsif ($arg eq "-about") {
		&about;
		exit 0;
	} elsif ($arg eq "-f") {
		$floppy_image_name = shift @ARGV;
		if (!(defined $floppy_image_name)) {
			print STDERR "-f must be followed by the name of the image file\n";
			$usage = 1;
		}
	} else {
		print STDERR "unknown option $arg\n";
		$usage = 1;
	}
}

if (!$clean && !$build_floppy) {
	$usage = 1;
}

if (!(defined $floppy_image_name) && (!$clean)) {
	$usage = 1;
}

if ($usage) {
	&about;
	print STDERR "Usage: install.sh [options] -f <image name>\n";
	print STDERR "Options:\n";
	print STDERR "\t--build_floppy: Generates a fat12 floppy image\n";
	print STDERR "\t--clean: delete image mtool config files\n";
	exit $usage;
}

###
# validate command line arguments
if ($clean && $build_floppy) {
	print "--clean can not be used in conjunction with any other option\n";
	print "--clean can not be used in conjunction with any other option\n";
	exit -1;
}

#####
# process commands
if ($clean) {
	&clean_files;
}

if ($build_floppy) {
	&generate_mtools_config;
	&build_floppy_image;
	&install_grub;
}

sub about {
	print "install.sh -- PoseidonOS installer\n";
}

sub generate_mtools_config {
	print "Generating mtools config...\n";
	`rm -f $mtools_config_file`;

	open FH, ">>$mtools_config_file" or die print "failed to write mtools config: $!";

	print FH "#\n";
	print FH "# Automatically generated by poseidonos installer\n";
	print FH "#\n";
	print FH "drive a: file=\"$floppy_image_name\" 1.44m mformat_only";

	close FH;
}

sub build_floppy_image {
	print "Creating flopy image ($floppy_image_name)...\n";
	$out = system("dd if=/dev/zero of=$floppy_image_name bs=512 count=2880 &> /dev/null");

	if ($out != 0)
	{
		print STDERR "dd error: $!\n";
		exit -1;
	}

	print "Formatting disk image...\n";
	$out = system("MTOOLSRC=$mtools_config_file mformat a:");
	if ($out != 0)
	{
		exit -1;
	}
}

sub install_grub {
	print "Installing GRUB...\n";

	system("MTOOLSRC=$mtools_config_file mmd a:/boot");
	system("MTOOLSRC=$mtools_config_file mmd a:/boot/grub");
	system("MTOOLSRC=$mtools_config_file mcopy grub/* a:/boot/grub");

	$grub = $ENV{GRUB};
	if (!defined $grub)
	{
		$grub = "grub";
	}

	#write install script
	`rm -f .grub_install_script &> /dev/null`;
	open FH, ">>.grub_install_script" or die print "unable to create grub install script\n";
	print FH "device (fd0) $floppy_image_name\n";
	print FH "install (fd0)/boot/grub/stage1 (fd0) (fd0)/boot/grub/stage2 p (fd0)/boot/grub/menu.lst\n";
	print FH "quit";
	close FH;
	`rm -f .grub_install_script`;

	#run install script
	$out = system("$grub --batch << EOF  &> /dev/null || exit 1
			device (fd0) $floppy_image_name
			install (fd0)/boot/grub/stage1 (fd0) (fd0)/boot/grub/stage2 p (fd0)/boot/grub/menu.lst
			quit
			EOF");
	if ($out != 0)
	{
		print STDERR "ERROR: something went wrong with the grub install.  Make sure that you have grub on your system and that it is either in your \$PATH or in \$GRUB\n";
		exit -1;
	}
}

sub clean_files {
	print "removing mtools config";
	my $files = "$mtools_config_file ";
	if (defined $floppy_image_name)
	{
		$files .= $floppy_image_name;
		print " and floppy image\n";
	} else {
		print "\n";
	}
	`rm -f $files`;
}
